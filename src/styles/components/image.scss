@use "../variables";

@mixin frame($colour: variables.$colour-white) {
  border: 0.5rem solid $colour;
}

@mixin frame-box-shadow($color) {
  box-shadow: 0 0 0 4px $color, 0 0 0 8px rgba(255, 255, 255, 0.3),
    0 4px 15px rgba(0, 0, 0, 0.3);
}

.image {
  width: 100%;
  opacity: 0;
  transition: opacity 0.3s ease;
  box-sizing: border-box; /* Include frame border in declared width */

  &--heading {
    width: 200px;
    @media screen and (max-width: variables.$breakpoint-m) {
      width: 150px;
    }
  }
  &--gallery,
  &--bio {
    width: 150px;
    @media screen and (max-width: variables.$breakpoint-m) {
      width: 120px;
    }
  }

  &[loading="lazy"] {
    background-color: variables.$colour-very-light;
  }

  &--loading {
    background-color: variables.$colour-very-light;
    background-image: linear-gradient(
      90deg,
      transparent,
      rgba(255, 255, 255, 0.4),
      transparent
    );
    background-size: 200% 100%;
    animation: shimmer 2s infinite;
  }

  &[src]:not([src=""]) {
    opacity: 1;
  }

  &--circle {
    border-radius: 500px;
    aspect-ratio: 1/1;
  }
  &--rounded-square {
    border-radius: 20px;
    aspect-ratio: 1/1;
  }

  &--framed {
    position: relative;
    @include frame(); /* 5px white border included in width */
    box-shadow: 0 2px 12px rgba(0, 0, 0, 0.3); /* Subtle depth only */

    /* Decorative concentric ring effect re-created inside bounds */
    &::after {
      content: "";
      position: absolute;
      inset: 0; /* Start at border edge */
      pointer-events: none;
      border-radius: inherit;
      /* Create two inner rings using multiple inset shadows */
      /* colour layer + soft highlight similar to original outer stack */
      box-shadow: inset 0 0 0 4px rgba(255, 255, 255, 0.3),
        inset 0 0 0 8px rgba(0, 0, 0, 0.05);
    }

    &--dark {
      @include frame(variables.$colour-brown);
      /* Dark theme tint: simulate original brown outer ring without expanding box */
      &::after {
        box-shadow: inset 0 0 0 4px rgba(255, 255, 255, 0.3),
          inset 0 0 0 8px rgba(90, 62, 39, 0.25);
      }
    }
    &--light {
      @include frame(variables.$colour-tan);
      &::after {
        box-shadow: inset 0 0 0 4px rgba(255, 255, 255, 0.3),
          inset 0 0 0 8px rgba(210, 180, 140, 0.35);
      }
    }
  }

  /* Optional alternative: inward shadow variant (currently unused)
  &--framed-inset {
    @include frame;
    box-shadow: inset 0 0 0 4px rgba(255,255,255,0.3), 0 2px 12px rgba(0,0,0,0.25);
  }
  */
}

@keyframes shimmer {
  0% {
    background-position: -200% 0;
  }
  100% {
    background-position: 200% 0;
  }
}
